#!/bin/bash

FORMAT="%C(bold cyan)%h%C(reset)  %C(blue)%ar%C(reset) %C(bold red)% D%C(reset)%n  %C(white)%w($(($(tput cols) - 20)),0,2)%s%C(reset)%w() %C(yellow)- %an%C(reset)%n"

show_git_head()
{
    pretty_git_log -1
    git show -p --pretty="tformat:"
}

pretty_git_log()
{
    git log --color=always --graph --pretty="tformat:${FORMAT}" $* |
        sed -Ee 's/\|/│/g' \
             -e 's/\/(\x1b\[m)/╱\1/g' \
             -e 's/\\(\x1b\[m)/╲\1/g' |
        # Page only if we're asked to.
        if [ -n "$GIT_NO_PAGER" ]; then
            cat
        else
            # Page only if needed.
            less --quit-if-one-screen --no-init --RAW-CONTROL-CHARS --chop-long-lines
        fi
}

push_wip()
{
    branch="$(git rev-parse --abbrev-ref HEAD)"
    remote="$(git config "branch.$branch.remote")"
    identifier="$1"
    tag="wip-${identifier:-$(whoami)}"

    git stash -a
    git push "$remote" "+refs/stash:refs/tags/$tag"
}

pull_wip()
{
    branch="$(git rev-parse --abbrev-ref HEAD)"
    remote="$(git config "branch.$branch.remote")"
    identifier="$1"
    tag="wip-${identifier:-$(whoami)}"
    ref="refs/tags/$tag"

    object="$(git ls-remote "$remote" "$ref" | awk '{ print $1 }')"
    git="$(git rev-parse --show-cdup).git"

    # Download wip object
    git fetch "$remote" "$ref"

    # Tell Git this is a stash thing
    echo "$object" > "$git/refs/stash"
    git log "$object" -1 --format="0000000000000000000000000000000000000000 %H %an <%ae> %ad   %s" \
        --date=format:"%s %z" > "$git/logs/refs/stash"

    # Pop it
    git stash pop

    # Delete remote wip object
    git push "$remote" ":$ref"
}
